name: Node.js CI

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.PGDATABASE_TEST }}
          POSTGRES_USER: ${{ secrets.PGUSER_TEST }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD_TEST }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üõ†Ô∏è Build (if present)
        run: npm run build --if-present

      - name: üêò Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: üîç Check PostgreSQL readiness
        run: |
          echo "Checking if PostgreSQL is ready..."
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 && break
            echo "‚è≥ Waiting for PostgreSQL..."
            sleep 3
          done
          echo "‚úÖ PostgreSQL is ready"

      - name: üîó Test PostgreSQL connection with psql
        run: |
          echo "Testing PostgreSQL connection with psql..."
          psql -h localhost -U $PGUSER_TEST -d $PGDATABASE_TEST -c '\l'
        env:
          PGUSER_TEST: ${{ secrets.PGUSER_TEST }}
          PGPASSWORD: ${{ secrets.PGPASSWORD_TEST }}
          PGDATABASE_TEST: ${{ secrets.PGDATABASE_TEST }}

      - name: üß™ Run DB migration
        run: |
          set -x
          echo "Running database migration..."
          npm run migrate up || { echo "‚ùå Migration failed"; exit 1; }
        env:
          CI: true
          PGHOST: localhost
          PGUSER: ${{ secrets.PGUSER_TEST }}
          PGDATABASE: ${{ secrets.PGDATABASE_TEST }}
          PGPASSWORD: ${{ secrets.PGPASSWORD_TEST }}
          PGPORT: 5432

      - name: üß™ Run tests
        run: |
          set -x
          echo "Running tests..."
          npm test || { echo "‚ùå Tests failed"; exit 1; }
        env:
          CI: true
          PGHOST: localhost
          PGUSER: ${{ secrets.PGUSER_TEST }}
          PGDATABASE: ${{ secrets.PGDATABASE_TEST }}
          PGPASSWORD: ${{ secrets.PGPASSWORD_TEST }}
          PGPORT: 5432
          ACCESS_TOKEN_KEY: ${{ secrets.ACCESS_TOKEN_KEY }}
          REFRESH_TOKEN_KEY: ${{ secrets.REFRESH_TOKEN_KEY }}
          ACCESS_TOKEN_AGE: ${{ secrets.ACCESS_TOKEN_AGE }}